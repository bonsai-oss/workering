stages:
  - test
  - release

unit tests:
  image: golang
  stage: test
  before_script:
    - go install gotest.tools/gotestsum@latest
  script:
    - go test -v ./...
    - /go/bin/gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml

fmt:
  image: golang
  stage: test
  script:
    - go fmt ./...

semantic_release:
  stage: release
  image: registry.fsrv.services/fsrvcorp/container/payipi:latest
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
    TAG_PREFIX: "v"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - get-next-version -f json
    - VERSION="$(get-next-version -f json | jq -r 'select(.hasNextVersion==true) | .version')"
    - echo $VERSION
    - test -z "$VERSION" || curl --silent --request POST --header "PRIVATE-TOKEN:${CI_BOT_TOKEN}" "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${TAG_PREFIX}${VERSION}&ref=${CI_DEFAULT_BRANCH}" | jq